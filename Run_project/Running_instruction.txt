running steps:
1. Change the home_path in initiate.sh to the path of the project folder. E.g. home_path='/home/username/Run_project'  Note: no space before and after "="; no "/" at the end of the path;
   Run initiate.sh by typing . initiate.sh
   Empty folders containing datasets will be created by running initiate.sh;
   Paths within all bash and python scripts will be changed automatically as well.

2. Download gridMET datasets to the GridMet folder under home_path/input_data/GridMet/ (which was created by Step.1). E.g. /home/username/Run_project/input_data/GridMet/

3. Download MACA datasets to the MACA folder under home_path/input_data/MACA/ (which was created by Step.1). E.g. /home/username/Run_project/input_data/MACA/

4. submit the job to mask non-almond croplands in a example MACA netCDF by typing sbatch submit_mask_MACA.sh. Since MACA datasets are too large and too many to be all processed, we only mask one MACA netCDF    and use this as a reference cropland dataset to mask other MACA datasets.

5. submit the job to maks non-almond croplands in all gridMET netCDF by typing sbatch submit_mask_Gridmet.sh

6. submit job to process ACI of Gridmet by typing sbatch submit_Gridmet_ACI.sh

7. submit job to process ACI of MACA by typing . run_MACA_ACI.sh (this will take some time to complete the job submitting since we submit job for each MACA model)

7. create gridmet_ACI.nc by typing python Gridmet_create_nc.py; create Gridmet.csv by typing python Gridmet_create_csv.py

8. run lasso regression analysis by typing sbatch submit_Almond_lasso.sh

9. create MACA.nc by typing . run_MACA_create_nc.sh; this should generate _hist_ACI.nc, _rcp45_ACI.nc, _rcp85_ACI.nc for each cliamte model

10. create MACA.csv by typing python MACA_create_csv.py

11. run MACA_projection.py by typing sbatch submit_MACA_projection.sh to generate simulated yields for MACA

12. run aci_contribution.py by typing sbatch submit_aci_contribution.sh to calculate contribution of each ACI

13. create plots by typing python plot.py
